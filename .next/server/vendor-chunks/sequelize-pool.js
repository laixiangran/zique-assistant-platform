"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/sequelize-pool";
exports.ids = ["vendor-chunks/sequelize-pool"];
exports.modules = {

/***/ "(rsc)/./node_modules/sequelize-pool/lib/AggregateError.js":
/*!***********************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/AggregateError.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AggregateError = void 0;\nclass AggregateError extends Error {\n    constructor(errors) {\n        super();\n        this.errors = errors;\n        this.name = 'AggregateError';\n    }\n    toString() {\n        const message = `AggregateError of:\\n${this.errors\n            .map((error) => error === this\n            ? '[Circular AggregateError]'\n            : error instanceof AggregateError\n                ? String(error).replace(/\\n$/, '').replace(/^/gm, '  ')\n                : String(error).replace(/^/gm, '    ').substring(2))\n            .join('\\n')}\\n`;\n        return message;\n    }\n}\nexports.AggregateError = AggregateError;\n//# sourceMappingURL=AggregateError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL0FnZ3JlZ2F0ZUVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3ppcXVlLWFzc2lzdGFudC1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9zZXF1ZWxpemUtcG9vbC9saWIvQWdncmVnYXRlRXJyb3IuanM/MDgwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWdncmVnYXRlRXJyb3IgPSB2b2lkIDA7XG5jbGFzcyBBZ2dyZWdhdGVFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihlcnJvcnMpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5lcnJvcnMgPSBlcnJvcnM7XG4gICAgICAgIHRoaXMubmFtZSA9ICdBZ2dyZWdhdGVFcnJvcic7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gYEFnZ3JlZ2F0ZUVycm9yIG9mOlxcbiR7dGhpcy5lcnJvcnNcbiAgICAgICAgICAgIC5tYXAoKGVycm9yKSA9PiBlcnJvciA9PT0gdGhpc1xuICAgICAgICAgICAgPyAnW0NpcmN1bGFyIEFnZ3JlZ2F0ZUVycm9yXSdcbiAgICAgICAgICAgIDogZXJyb3IgaW5zdGFuY2VvZiBBZ2dyZWdhdGVFcnJvclxuICAgICAgICAgICAgICAgID8gU3RyaW5nKGVycm9yKS5yZXBsYWNlKC9cXG4kLywgJycpLnJlcGxhY2UoL14vZ20sICcgICcpXG4gICAgICAgICAgICAgICAgOiBTdHJpbmcoZXJyb3IpLnJlcGxhY2UoL14vZ20sICcgICAgJykuc3Vic3RyaW5nKDIpKVxuICAgICAgICAgICAgLmpvaW4oJ1xcbicpfVxcbmA7XG4gICAgICAgIHJldHVybiBtZXNzYWdlO1xuICAgIH1cbn1cbmV4cG9ydHMuQWdncmVnYXRlRXJyb3IgPSBBZ2dyZWdhdGVFcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFnZ3JlZ2F0ZUVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/AggregateError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/sequelize-pool/lib/Deferred.js":
/*!*****************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/Deferred.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Deferred = void 0;\nconst TimeoutError_1 = __webpack_require__(/*! ./TimeoutError */ \"(rsc)/./node_modules/sequelize-pool/lib/TimeoutError.js\");\nclass Deferred {\n    constructor() {\n        this._promise = new Promise((resolve, reject) => {\n            this._reject = reject;\n            this._resolve = resolve;\n        });\n    }\n    registerTimeout(timeoutInMillis, callback) {\n        if (this._timeout)\n            return;\n        this._timeout = setTimeout(() => {\n            callback();\n            this.reject(new TimeoutError_1.TimeoutError('Operation timeout'));\n        }, timeoutInMillis);\n    }\n    _clearTimeout() {\n        if (!this._timeout)\n            return;\n        clearTimeout(this._timeout);\n    }\n    resolve(value) {\n        this._clearTimeout();\n        this._resolve(value);\n    }\n    reject(error) {\n        this._clearTimeout();\n        this._reject(error);\n    }\n    promise() {\n        return this._promise;\n    }\n}\nexports.Deferred = Deferred;\n//# sourceMappingURL=Deferred.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL0RlZmVycmVkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQix1QkFBdUIsbUJBQU8sQ0FBQywrRUFBZ0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly96aXF1ZS1hc3Npc3RhbnQtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL0RlZmVycmVkLmpzPzY0ODkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRlZmVycmVkID0gdm9pZCAwO1xuY29uc3QgVGltZW91dEVycm9yXzEgPSByZXF1aXJlKFwiLi9UaW1lb3V0RXJyb3JcIik7XG5jbGFzcyBEZWZlcnJlZCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuX3Byb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9yZWplY3QgPSByZWplY3Q7XG4gICAgICAgICAgICB0aGlzLl9yZXNvbHZlID0gcmVzb2x2ZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlZ2lzdGVyVGltZW91dCh0aW1lb3V0SW5NaWxsaXMsIGNhbGxiYWNrKSB7XG4gICAgICAgIGlmICh0aGlzLl90aW1lb3V0KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLl90aW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgdGhpcy5yZWplY3QobmV3IFRpbWVvdXRFcnJvcl8xLlRpbWVvdXRFcnJvcignT3BlcmF0aW9uIHRpbWVvdXQnKSk7XG4gICAgICAgIH0sIHRpbWVvdXRJbk1pbGxpcyk7XG4gICAgfVxuICAgIF9jbGVhclRpbWVvdXQoKSB7XG4gICAgICAgIGlmICghdGhpcy5fdGltZW91dClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVvdXQpO1xuICAgIH1cbiAgICByZXNvbHZlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX2NsZWFyVGltZW91dCgpO1xuICAgICAgICB0aGlzLl9yZXNvbHZlKHZhbHVlKTtcbiAgICB9XG4gICAgcmVqZWN0KGVycm9yKSB7XG4gICAgICAgIHRoaXMuX2NsZWFyVGltZW91dCgpO1xuICAgICAgICB0aGlzLl9yZWplY3QoZXJyb3IpO1xuICAgIH1cbiAgICBwcm9taXNlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcHJvbWlzZTtcbiAgICB9XG59XG5leHBvcnRzLkRlZmVycmVkID0gRGVmZXJyZWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1EZWZlcnJlZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/Deferred.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/sequelize-pool/lib/Pool.js":
/*!*************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/Pool.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Pool = void 0;\nconst Deferred_1 = __webpack_require__(/*! ./Deferred */ \"(rsc)/./node_modules/sequelize-pool/lib/Deferred.js\");\nconst AggregateError_1 = __webpack_require__(/*! ./AggregateError */ \"(rsc)/./node_modules/sequelize-pool/lib/AggregateError.js\");\nclass Pool {\n    constructor(factory) {\n        this.log = false;\n        if (!factory.create) {\n            throw new Error('create function is required');\n        }\n        if (!factory.destroy) {\n            throw new Error('destroy function is required');\n        }\n        if (!factory.validate) {\n            throw new Error('validate function is required');\n        }\n        if (typeof factory.min !== 'number' ||\n            factory.min < 0 ||\n            factory.min !== Math.round(factory.min)) {\n            throw new Error('min must be an integer >= 0');\n        }\n        if (typeof factory.max !== 'number' ||\n            factory.max <= 0 ||\n            factory.max !== Math.round(factory.max)) {\n            throw new Error('max must be an integer > 0');\n        }\n        if (factory.min > factory.max) {\n            throw new Error('max is smaller than min');\n        }\n        if (factory.maxUses !== undefined &&\n            (typeof factory.maxUses !== 'number' || factory.maxUses < 0)) {\n            throw new Error('maxUses must be an integer >= 0');\n        }\n        this.idleTimeoutMillis = factory.idleTimeoutMillis || 30000;\n        this.acquireTimeoutMillis = factory.acquireTimeoutMillis || 30000;\n        this.reapIntervalMillis = factory.reapIntervalMillis || 1000;\n        this.maxUsesPerResource = factory.maxUses || Infinity;\n        this.log = factory.log || false;\n        this._factory = factory;\n        this._count = 0;\n        this._draining = false;\n        this._pendingAcquires = [];\n        this._inUseObjects = [];\n        this._availableObjects = [];\n        this._removeIdleScheduled = false;\n    }\n    get size() {\n        return this._count;\n    }\n    get name() {\n        return this._factory.name;\n    }\n    get available() {\n        return this._availableObjects.length;\n    }\n    get using() {\n        return this._inUseObjects.length;\n    }\n    get waiting() {\n        return this._pendingAcquires.length;\n    }\n    get maxSize() {\n        return this._factory.max;\n    }\n    get minSize() {\n        return this._factory.min;\n    }\n    _log(message, level) {\n        if (typeof this.log === 'function') {\n            this.log(message, level);\n        }\n        else if (this.log) {\n            console.log(`${level.toUpperCase()} pool ${this.name || ''} - ${message}`);\n        }\n    }\n    _removeIdle() {\n        const toRemove = [];\n        const now = Date.now();\n        let i;\n        let available = this._availableObjects.length;\n        const maxRemovable = this.size - this.minSize;\n        let timeout;\n        this._removeIdleScheduled = false;\n        for (i = 0; i < available && maxRemovable > toRemove.length; i++) {\n            timeout = this._availableObjects[i].timeout;\n            if (now >= timeout) {\n                this._log('removeIdle() destroying obj - now:' + now + ' timeout:' + timeout, 'verbose');\n                toRemove.push(this._availableObjects[i].resource);\n            }\n        }\n        toRemove.forEach(this.destroy, this);\n        available = this._availableObjects.length;\n        if (available > 0) {\n            this._log('this._availableObjects.length=' + available, 'verbose');\n            this._scheduleRemoveIdle();\n        }\n        else {\n            this._log('removeIdle() all objects removed', 'verbose');\n        }\n    }\n    _scheduleRemoveIdle() {\n        if (!this._removeIdleScheduled) {\n            this._removeIdleScheduled = true;\n            this._removeIdleTimer = setTimeout(() => {\n                this._removeIdle();\n            }, this.reapIntervalMillis);\n        }\n    }\n    _dispense() {\n        let wrappedResource = null;\n        const waitingCount = this._pendingAcquires.length;\n        this._log(`dispense() clients=${waitingCount} available=${this._availableObjects.length}`, 'info');\n        if (waitingCount < 1) {\n            return;\n        }\n        while (this._availableObjects.length > 0) {\n            this._log('dispense() - reusing obj', 'verbose');\n            wrappedResource = this._availableObjects[this._availableObjects.length - 1];\n            if (!this._factory.validate(wrappedResource.resource)) {\n                this.destroy(wrappedResource.resource);\n                continue;\n            }\n            this._availableObjects.pop();\n            this._addResourceToInUseObjects(wrappedResource.resource, wrappedResource.useCount);\n            const deferred = this._pendingAcquires.shift();\n            return deferred.resolve(wrappedResource.resource);\n        }\n        if (this.size < this.maxSize) {\n            this._createResource();\n        }\n    }\n    _createResource() {\n        this._count += 1;\n        this._log(`createResource() - creating obj - count=${this.size} min=${this.minSize} max=${this.maxSize}`, 'verbose');\n        this._factory\n            .create()\n            .then((resource) => {\n            const deferred = this._pendingAcquires.shift();\n            if (deferred) {\n                this._addResourceToInUseObjects(resource, 0);\n                deferred.resolve(resource);\n            }\n            else {\n                this._addResourceToAvailableObjects(resource, 0);\n            }\n        })\n            .catch((error) => {\n            const deferred = this._pendingAcquires.shift();\n            this._count -= 1;\n            if (this._count < 0)\n                this._count = 0;\n            if (deferred) {\n                deferred.reject(error);\n            }\n            process.nextTick(() => {\n                this._dispense();\n            });\n        });\n    }\n    _addResourceToAvailableObjects(resource, useCount) {\n        const wrappedResource = {\n            resource: resource,\n            useCount: useCount,\n            timeout: Date.now() + this.idleTimeoutMillis,\n        };\n        this._availableObjects.push(wrappedResource);\n        this._dispense();\n        this._scheduleRemoveIdle();\n    }\n    _addResourceToInUseObjects(resource, useCount) {\n        const wrappedResource = {\n            resource: resource,\n            useCount: useCount,\n        };\n        this._inUseObjects.push(wrappedResource);\n    }\n    _ensureMinimum() {\n        let i, diff;\n        if (!this._draining && this.size < this.minSize) {\n            diff = this.minSize - this.size;\n            for (i = 0; i < diff; i++) {\n                this._createResource();\n            }\n        }\n    }\n    acquire() {\n        if (this._draining) {\n            return Promise.reject(new Error('pool is draining and cannot accept work'));\n        }\n        const deferred = new Deferred_1.Deferred();\n        deferred.registerTimeout(this.acquireTimeoutMillis, () => {\n            this._pendingAcquires = this._pendingAcquires.filter((pending) => pending !== deferred);\n        });\n        this._pendingAcquires.push(deferred);\n        this._dispense();\n        return deferred.promise();\n    }\n    release(resource) {\n        if (this._availableObjects.some((resourceWithTimeout) => resourceWithTimeout.resource === resource)) {\n            this._log('release called twice for the same resource: ' + new Error().stack, 'error');\n            return;\n        }\n        const index = this._inUseObjects.findIndex((wrappedResource) => wrappedResource.resource === resource);\n        if (index < 0) {\n            this._log('attempt to release an invalid resource: ' + new Error().stack, 'error');\n            return;\n        }\n        const wrappedResource = this._inUseObjects[index];\n        wrappedResource.useCount += 1;\n        if (wrappedResource.useCount >= this.maxUsesPerResource) {\n            this._log('release() destroying obj - useCount:' +\n                wrappedResource.useCount +\n                ' maxUsesPerResource:' +\n                this.maxUsesPerResource, 'verbose');\n            this.destroy(wrappedResource.resource);\n            this._dispense();\n        }\n        else {\n            this._inUseObjects.splice(index, 1);\n            this._addResourceToAvailableObjects(wrappedResource.resource, wrappedResource.useCount);\n        }\n    }\n    async destroy(resource) {\n        const available = this._availableObjects.length;\n        const using = this._inUseObjects.length;\n        this._availableObjects = this._availableObjects.filter((object) => object.resource !== resource);\n        this._inUseObjects = this._inUseObjects.filter((object) => object.resource !== resource);\n        if (available === this._availableObjects.length &&\n            using === this._inUseObjects.length) {\n            this._ensureMinimum();\n            return;\n        }\n        this._count -= 1;\n        if (this._count < 0)\n            this._count = 0;\n        try {\n            await this._factory.destroy(resource);\n        }\n        finally {\n            this._ensureMinimum();\n            if (!this._draining) {\n                process.nextTick(() => {\n                    this._dispense();\n                });\n            }\n        }\n    }\n    drain() {\n        this._log('draining', 'info');\n        this._draining = true;\n        const check = (callback) => {\n            if (this._pendingAcquires.length > 0) {\n                this._dispense();\n                setTimeout(() => {\n                    check(callback);\n                }, 100);\n                return;\n            }\n            if (this._availableObjects.length !== this._count) {\n                setTimeout(() => {\n                    check(callback);\n                }, 100);\n                return;\n            }\n            callback();\n        };\n        return new Promise((resolve) => check(resolve));\n    }\n    async destroyAllNow() {\n        this._log('force destroying all objects', 'info');\n        this._removeIdleScheduled = false;\n        clearTimeout(this._removeIdleTimer);\n        const resources = this._availableObjects.map((resource) => resource.resource);\n        const errors = [];\n        for (const resource of resources) {\n            try {\n                await this.destroy(resource);\n            }\n            catch (ex) {\n                this._log('Error destroying resource: ' + ex.stack, 'error');\n                errors.push(ex);\n            }\n        }\n        if (errors.length > 0) {\n            throw new AggregateError_1.AggregateError(errors);\n        }\n    }\n}\nexports.Pool = Pool;\n//# sourceMappingURL=Pool.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/Pool.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/sequelize-pool/lib/TimeoutError.js":
/*!*********************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/TimeoutError.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TimeoutError = void 0;\nclass TimeoutError extends Error {\n}\nexports.TimeoutError = TimeoutError;\n//# sourceMappingURL=TimeoutError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL1RpbWVvdXRFcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL3ppcXVlLWFzc2lzdGFudC1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9zZXF1ZWxpemUtcG9vbC9saWIvVGltZW91dEVycm9yLmpzPzc0NzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRpbWVvdXRFcnJvciA9IHZvaWQgMDtcbmNsYXNzIFRpbWVvdXRFcnJvciBleHRlbmRzIEVycm9yIHtcbn1cbmV4cG9ydHMuVGltZW91dEVycm9yID0gVGltZW91dEVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VGltZW91dEVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/TimeoutError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/sequelize-pool/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Pool = exports.AggregateError = exports.TimeoutError = void 0;\nvar TimeoutError_1 = __webpack_require__(/*! ./TimeoutError */ \"(rsc)/./node_modules/sequelize-pool/lib/TimeoutError.js\");\nObject.defineProperty(exports, \"TimeoutError\", ({ enumerable: true, get: function () { return TimeoutError_1.TimeoutError; } }));\nvar AggregateError_1 = __webpack_require__(/*! ./AggregateError */ \"(rsc)/./node_modules/sequelize-pool/lib/AggregateError.js\");\nObject.defineProperty(exports, \"AggregateError\", ({ enumerable: true, get: function () { return AggregateError_1.AggregateError; } }));\nvar Pool_1 = __webpack_require__(/*! ./Pool */ \"(rsc)/./node_modules/sequelize-pool/lib/Pool.js\");\nObject.defineProperty(exports, \"Pool\", ({ enumerable: true, get: function () { return Pool_1.Pool; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVksR0FBRyxzQkFBc0IsR0FBRyxvQkFBb0I7QUFDNUQscUJBQXFCLG1CQUFPLENBQUMsK0VBQWdCO0FBQzdDLGdEQUErQyxFQUFFLHFDQUFxQyx1Q0FBdUMsRUFBQztBQUM5SCx1QkFBdUIsbUJBQU8sQ0FBQyxtRkFBa0I7QUFDakQsa0RBQWlELEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDO0FBQ3BJLGFBQWEsbUJBQU8sQ0FBQywrREFBUTtBQUM3Qix3Q0FBdUMsRUFBRSxxQ0FBcUMsdUJBQXVCLEVBQUM7QUFDdEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly96aXF1ZS1hc3Npc3RhbnQtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL2luZGV4LmpzPzk5N2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvb2wgPSBleHBvcnRzLkFnZ3JlZ2F0ZUVycm9yID0gZXhwb3J0cy5UaW1lb3V0RXJyb3IgPSB2b2lkIDA7XG52YXIgVGltZW91dEVycm9yXzEgPSByZXF1aXJlKFwiLi9UaW1lb3V0RXJyb3JcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUaW1lb3V0RXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRpbWVvdXRFcnJvcl8xLlRpbWVvdXRFcnJvcjsgfSB9KTtcbnZhciBBZ2dyZWdhdGVFcnJvcl8xID0gcmVxdWlyZShcIi4vQWdncmVnYXRlRXJyb3JcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBZ2dyZWdhdGVFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQWdncmVnYXRlRXJyb3JfMS5BZ2dyZWdhdGVFcnJvcjsgfSB9KTtcbnZhciBQb29sXzEgPSByZXF1aXJlKFwiLi9Qb29sXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUG9vbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUG9vbF8xLlBvb2w7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/index.js\n");

/***/ })

};
;